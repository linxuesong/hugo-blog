<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on 网站标题</title>
    <link>/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on 网站标题</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Sat, 26 Dec 2020 10:26:53 +0000</lastBuildDate><atom:link href="/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;读取文件到内存中流程含示例</title>
      <link>/posts/c-%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%88%B0%E5%86%85%E5%AD%98%E4%B8%AD%E6%B5%81%E7%A8%8B%E5%90%AB%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Sat, 26 Dec 2020 10:26:53 +0000</pubDate>
      
      <guid>/posts/c-%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%88%B0%E5%86%85%E5%AD%98%E4%B8%AD%E6%B5%81%E7%A8%8B%E5%90%AB%E7%A4%BA%E4%BE%8B/</guid>
      <description>一、示例说明 程序输入为种子用户ID数据集合，每一行包括用户ID和256维用户特征，用户特征数据类型为浮点型数据（存在部分数据用科学计数法表示的情况，比如1.4283673760891302E-4），所有数据分隔符为逗号，ID处于第1个位置，其它256维特征按照顺序处于2-257个位置。其中1-128维为连续性特征，数据都大于等于0小于等于1，余下129-256维为分类型特征经过one-hot处理过后的稀疏数据，数据都为0或者1。如下格式： ID0001,0.1,0,0.56,…,0,1
保存变量的结构体如下：
typedef struct User{string id;float fv[128];int iv[128];};计划读取文件每一行记录一个User变量的成员，元素1为id，元素2~129为fv,元素130~257为iv
二、读取文件代码 示例代码:
#include &amp;lt;QCoreApplication&amp;gt;#include &amp;lt;fstream&amp;gt;#include &amp;lt;sstream&amp;gt;using namespace std;typedef struct {string id;float fv[128];int iv[128];}User;int main(int argc, char *argv[]){QCoreApplication a(argc, argv);fstream seedf(&amp;quot;C:\\Users\\linxuesong\\Desktop\\cpp\\input\\seed.txt&amp;quot;);vector&amp;lt;User&amp;gt; users;while(!seedf.eof()) {string oneline;getline(seedf, oneline);User user;// 将一行按逗号分隔stringstream ss(oneline);getline(ss, user.</description>
    </item>
    
  </channel>
</rss>
