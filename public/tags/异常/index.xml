<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>异常 on 网站标题</title>
    <link>/tags/%E5%BC%82%E5%B8%B8/</link>
    <description>Recent content in 异常 on 网站标题</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Wed, 14 Apr 2021 17:16:25 +0000</lastBuildDate><atom:link href="/tags/%E5%BC%82%E5%B8%B8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JAVA异常机制</title>
      <link>/posts/java%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 14 Apr 2021 17:16:25 +0000</pubDate>
      
      <guid>/posts/java%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6/</guid>
      <description>一、异常 异常有两种选择：throws和catch，一种是抛给调用者，另一种是在本方法中捕获处理。
选择标准：如果知道如何处理就catch，不知道如何处理就throws
异常种类：Throwable是父类， 1⃣️Error子类是系统错误不可控，所以不用抛出、不用处理2⃣️Exception/RuntimeException是可控的要被控制,我们的代码不应有数组越界等错误 3⃣️Exception/IOException是文件读写错误，类加载错误1⃣️2⃣️是不需要throws和catech的，3⃣️是需要throws或catch的,并且如果throws要列出所有可能抛出的IOException
public static void func1() throws IOException {//列出所有可能抛出的的IOExceptiontry{//检测代码}catch(FileNotFoundException | UnKonwHostException) {// 处理捕获异常throw new ServeletException(&amp;quot;xx&amp;quot;); //也可以再次抛出异常}finally {//最后一定执行的代码，常做一些关闭文件，释放资源的事情， 对于close也可能爆出异常，对此可以用带资源的try语句，保证最后关闭资源}}二、日志 将提示信息按照不同级别打印到指定文件中
1.JDK的Logging import java.io.UnsupportedEncodingException;import java.util.logging.Logger;public class Main {public static void main(String[] args) Logger logger = Logger.</description>
    </item>
    
  </channel>
</rss>
