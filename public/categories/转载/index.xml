<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>转载 on 网站标题</title>
    <link>/categories/%E8%BD%AC%E8%BD%BD/</link>
    <description>Recent content in 转载 on 网站标题</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Sat, 20 Mar 2021 11:27:45 +0000</lastBuildDate><atom:link href="/categories/%E8%BD%AC%E8%BD%BD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mac自带终端美化不用iterm2</title>
      <link>/posts/mac%E9%85%8D%E7%BD%AEiterm2/</link>
      <pubDate>Sat, 20 Mar 2021 11:27:45 +0000</pubDate>
      
      <guid>/posts/mac%E9%85%8D%E7%BD%AEiterm2/</guid>
      <description>参考链接：
晨旭OvO原创文章https://blog.csdn.net/a1228136188/article/details/109092435
本文为CSDN博主「DuebassLei」https://blog.csdn.net/m0_37903882/article/details/112655290 https://blog.csdn.net/m0_37903882/article/details/112655290
前沿： mac终端的使用，这里只使用系统自带的终端+oh my zsh，无iterm2、hyper等
 使用iterm2的好处是配置界面丰富主题多，有支持lz、sz的方法 不使用iterm2的好处是省去一个软件，配置也不算是麻烦  最终效果如下 设置步骤如下
1.下载zsh、oh-my-zsh Zsh // a 安装yum install -y zsh// b 查看zsh --version// c shell由bash变为zshchsh -s /bin/zsh// d 验证 #重新查看目前默认的shell,已经变为bin/zshecho $SHELLOh-my-Zsh sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot;2.配置zsh 修改配置文件 vi ～/.zshrc配置文件修改如下 # 1.</description>
    </item>
    
    <item>
      <title>ubuntu中apt-get安装的默认路径</title>
      <link>/posts/ubuntu%E4%B8%ADapt-get%E5%AE%89%E8%A3%85%E7%9A%84%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Mon, 01 Mar 2021 11:12:51 +0000</pubDate>
      
      <guid>/posts/ubuntu%E4%B8%ADapt-get%E5%AE%89%E8%A3%85%E7%9A%84%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84/</guid>
      <description>博客源地址：https://blog.csdn.net/yanhx1204/article/details/54893581
一、apt-get 安装 deb是debian linus的安装格式，跟red hat的rpm非常相似，最基本的安装命令是：dpkg -i file.deb或者直接双击此文件
dpkg 是Debian Package的简写，是为Debian 专门开发的套件管理系统，方便软件的安装、更新及移除。所有源自Debian的Linux发行版都使用dpkg，例如Ubuntu、Knoppix 等。 以下是一些 Dpkg 的普通用法：
1、dpkg -i 安装一个 Debian 软件包，如你手动下载的文件。
2、dpkg -c 列出 的内容。
3、dpkg -I 从 中提取包裹信息。
4、dpkg -r 移除一个已安装的包裹。
5、dpkg -P 完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。
6、dpkg -L 列出 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。
7、dpkg -s 显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .</description>
    </item>
    
  </channel>
</rss>
